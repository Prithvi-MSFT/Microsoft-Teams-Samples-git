# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build - All Samples
on:
  push:
    #Change the branch name to <<main>>
    #Change the path to the folder where your code resides. Any change here will start the activity. 
    branches:
      - v-abt/sample-health-build
    paths:
      - 'samples/app-installation-using-qr-code/csharp/**'  
  schedule:
    - cron: '12 21 * * *'  # every day at midnight
env:
    PROJECT_PATH_APP_VIRTUAL_ASSISTANT_CSHARP: ''

jobs:
  build-csharp-samples:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
            - project_path: 'samples/msgext-message-reminder/csharp/MessagingExtensionReminder/MessagingExtensionReminder.csproj'
              name: 'msgext-message-reminder'
              version: '3.1.301'

            - project_path: 'samples/tab-channel-group-config-page-auth/csharp/ConfigTabAuthentication/TabAuthentication.csproj'
              name: 'tab-channel-group-config-page-auth'
              version: '3.1.301'

            - project_path: 'samples/tab-deeplink/csharp/DeepLinkBot/DeepLinkBot.csproj'
              name: 'tab-deeplink'
              version: '3.1.301'

            - project_path: 'samples/tab-graph-toolkit/csharp/TabGraphToolkit/TabGraphToolkit.csproj'
              name: 'tab-graph-toolkit'
              version: '3.1.301'

            - project_path: 'samples/tab-sso/csharp/TeamsTabSSO/TeamsTabSSO.csproj'
              name: 'tab-sso'
              version: '3.1.301'

            - project_path: 'samples/tab-stage-view/csharp/TabInStageView/TabInStageView.csproj'
              name: 'tab-stage-view'
              version: '3.1.301'

      fail-fast: false
    name: Build "${{ matrix.name }}" csharp
    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "${{ matrix.version }}"
          include-prerelease: true

      - name: Build app
        run: dotnet build "${{ matrix.project_path }}" --configuration Release

  build-dotnet-samples:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
            - project_path: 'samples/app-complete-sample/csharp/template-bot-master-csharp/template-bot-master-csharp.csproj'
              name: 'app-complete-sample'

            - project_path: 'samples/app-task-module/csharp/Microsoft.Teams.Samples.TaskModule.Web/Microsoft.Teams.Samples.TaskModule.Web.csproj'
              name: 'app-task-module'

      fail-fast: false
    name: Build "${{ matrix.name }}" csharp
    steps:
      - uses: actions/checkout@v2

      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore NuGet packages
        run: nuget restore ${{ matrix.project_path }}
      
      - name: Build
        run: msbuild ${{ matrix.project_path }} /p:Configuration=Release

  build-nodejs-samples:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
            - project_path: 'samples/msgext-search-sso-config/nodejs'
              name: 'msgext-search-sso-config'
              version: '14.x'

            - project_path: 'samples/meetings-details-tab/nodejs'
              name: 'meetings-details-tab'
              version: '14.x'

            - project_path: 'samples/tab-device-permissions/nodejs'
              name: 'tab-device-permissions'
              version: '14.x'

            - project_path: 'samples/meetings-live-code-interview/nodejs/api'
              name: 'meetings-live-code-interview'
              version: '14.x'
      fail-fast: false
    name: Build "${{ matrix.name }}" nodejs
    defaults:
      run:
        working-directory: "${{ matrix.project_path }}"
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.version }}"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
    
