# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build - All Samples
on:
  push:
    #Change the branch name to <<main>>
    #Change the path to the folder where your code resides. Any change here will start the activity. 
    branches:
      - v-abt/sample-health-build
    paths:
      - 'samples/app-installation-using-qr-code/csharp/**'  
  schedule:
    - cron: '12 21 * * *'  # every day at midnight
env:
    PROJECT_PATH_APP_COMPLETE_AUTH_CSHARP: 'samples/app-complete-auth/csharp/AppCompleteAuth/AppCompleteAuth.csproj'
    PROJECT_PATH_APP_COMPLETE_AUTH_NODEJS: 'samples/app-complete-auth/nodejs'

    PROJECT_PATH_APP_COMPLETE_SAMPLE_CSHARP: 'samples/app-complete-sample/csharp/template-bot-master-csharp/template-bot-master-csharp.csproj'
    PROJECT_PATH_APP_COMPLETE_SAMPLE_NODEJS: 'samples/app-complete-sample/nodejs'

    PROJECT_PATH_APP_HELLO_WORLD_CSHARP: 'samples/app-hello-world/csharp/Microsoft.Teams.Samples.HelloWorld.Web/Microsoft.Teams.Samples.HelloWorld.Web.csproj'
    PROJECT_PATH_APP_HELLO_WORLD_NODEJS: 'samples/app-hello-world/nodejs'

    PROJECT_PATH_APP_INSTALLATION_USING_QR_CODE_CSHARP: 'samples/app-installation-using-qr-code/csharp/QRAppInstallation/QRAppInstallation.csproj'
    PROJECT_PATH_APP_INSTALLATION_USING_QR_CODE_NODEJS: 'samples/app-installation-using-qr-code/nodejs'

    PROJECT_PATH_APP_LOCALIZATION_CSHARP: 'samples/app-localization/csharp/Localization/Localization.csproj'
    PROJECT_PATH_APP_LOCALIZATION_NODEJS: 'samples/app-localization/nodejs'

    PROJECT_PATH_APP_REGION_SELECTION_CSHARP: 'samples/app-region-selection/csharp/RegionSectionApp/RegionSectionApp.csproj'

    PROJECT_PATH_APP_SSO_CSHARP: 'samples/app-sso/csharp/App SSO Sample/App SSO Sample.csproj'
    PROJECT_PATH_APP_SSO_NODEJS: 'samples/app-sso/nodejs'

    PROJECT_PATH_APP_TASK_MODULE_CSHARP: 'samples/app-task-module/csharp/Microsoft.Teams.Samples.TaskModule.Web/Microsoft.Teams.Samples.TaskModule.Web.csproj'
    PROJECT_PATH_APP_TASK_MODULE_NODEJS: 'samples/app-task-module/nodejs'

    PROJECT_PATH_APP_VIRTUAL_ASSISTANT_CSHARP: 'samples/app-virtual-assistant/csharp/TeamsVirtualAssistant.csproj'

jobs:
  build-csharp-samples:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
            - project_path: 'samples/meetings-events/csharp/MeetingEvents/MeetingEvents.csproj'
              name: 'meetings-events'
              version: '3.1.301'

            - project_path: 'samples/app-checkin-location/csharp/AppCheckinLocation/AppCheckinLocation.csproj'
              name: 'app-checkin-location'
              version: '3.1.301'

    name: Build "${{ matrix.name }}" csharp
    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "${{ matrix.version }}"
          include-prerelease: true

      - name: Build app
        run: dotnet build "${{ matrix.project_path }}" --configuration Release

  build-nodejs-samples:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
            - project_path: 'samples/app-auth/nodejs'
              name: 'app-auth'
              version: '14.x'

            - project_path: 'samples/app-checkin-location/nodejs'
              name: 'app-checkin-location'
              version: '14.x'

            - project_path: 'samples/app-localization/nodejs'
              name: 'app-localization'
              version: '14.x'

    name: Build "${{ matrix.name }}" nodejs
    defaults:
      run:
        working-directory: "${{ matrix.project_path }}"
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "${{ matrix.version }}"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present

  send-email:
    if: ${{ always() }}
    needs: [build-csharp-samples, build-nodejs-samples]
    runs-on: windows-latest
    steps:
        - uses: dawidd6/action-send-mail@v2
          with:
                # mail server settings
                server_address: smtp-mail.outlook.com
                server_port: 587
                # user credentials
                username: ${{ secrets.EMAIL_USERNAME_SAMPLE_HEALTH_BUILD }}
                password: ${{ secrets.EMAIL_PASSWORD_SAMPLE_HEALTH_BUILD }}
                # email subject
                subject: Status of Automated build <<testing>>
                # email body as text
                body: ${{ github.workflow }} executed with status ${{ github.workflow.status }}
                # comma-separated string, send email to
                to: v-abt@microsoft.com
                # from email name
                from: Abhijeet Thakur
    
